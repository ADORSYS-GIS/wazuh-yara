name: Run Pytest

on:
  push:
    branches:
      - main
      - develop
    tags:
      - 'v*'
  pull_request:
    branches:
      - main
      - develop

jobs:
  run-pytest-linux:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'

    - name: Install dependencies and Wazuh agent
      run: |
        # Install dependencies
        sudo apt-get update
        sudo apt-get install -y curl gnupg2 
        pip install pytest pytest-testinfra
    - name: Check install.sh syntax
      run: |
        sudo apt-get install -y shellcheck
        shellcheck --shell=bash scripts/install.sh
        
    - name: Install Wazuh agent
      run: |
        curl -sfL https://raw.githubusercontent.com/adorsys-gis/wazuh-agent/main/scripts/install.sh | WAZUH_MANAGER=127.0.0.1 bash    
    
    - name: Run yara install script
      run: |
        bash scripts/install.sh

    - name: Run tests 
      run: |
        sudo $(which pytest) -vv scripts/tests/yara.py
        

  run-pytest-macos:
    runs-on: macos-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        brew update
        brew install python3 coreutils gnu-sed shellcheck
        pip3 install pytest pytest-testinfra

    - name: Check install.sh syntax
      run: |
        shellcheck --shell=bash scripts/install.sh
        
    - name: Install Wazuh agent
      run: |
        curl -sfL https://raw.githubusercontent.com/adorsys-gis/wazuh-agent/main/scripts/install.sh | WAZUH_MANAGER=127.0.0.1 bash
    
    - name: Run yara install script
      run: |
        bash scripts/install.sh

    - name: Run tests
      run: |
        sudo $(which pytest) -vv scripts/tests/yara.py

  release:
    name: Release
    permissions: write-all
    needs:
      - run-pytest-linux
      - run-pytest-macos
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        if: startsWith(github.ref, 'refs/tags/v')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_version.outputs.VERSION }}
          release_name: Release ${{ steps.get_version.outputs.VERSION }}
          draft: false
          prerelease: false
